minimumLimaVersion: 1.1.0

base: template://_images/ubuntu-lts

mounts:
- location: "~/.beeai"
  mountPoint: "/beeai"

containerd:
  system: false
  user: false

provision:
- mode: system
  script: |
    #!/bin/sh
    if [ ! -d /var/lib/rancher/k3s ]; then
      curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --write-kubeconfig-mode 644 --https-listen-port=16443" sh -
    fi
- mode: system
  script: |
    #!/bin/sh
    until kubectl get configmap coredns -n kube-system >/dev/null 2>&1; do
      sleep 2
    done
    TMP=$(mktemp -d)
    HOST_IP=$(dig +noall +short host.lima.internal)
    kubectl get configmap coredns -n kube-system -o yaml >$TMP/coredns.yaml
    if ! grep -q "host.docker.internal" $TMP/coredns.yaml; then
      awk -v ip="$HOST_IP" '/^  NodeHosts: \|/{print; print "    " ip " host.docker.internal"; next}1' $TMP/coredns.yaml >$TMP/coredns-patched.yaml
      kubectl apply -f $TMP/coredns-patched.yaml
      kubectl -n kube-system rollout restart deployment coredns
    fi

probes:
- script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! timeout 30s bash -c "until test -f /etc/rancher/k3s/k3s.yaml; do sleep 3; done"; then
      echo >&2 "k3s is not running yet"
      exit 1
    fi

copyToHost:
- guest: "/etc/rancher/k3s/k3s.yaml"
  host: "{{.Dir}}/copied-from-guest/kubeconfig.yaml"
  deleteOnStop: true

portForwards:
  - guestPort: 31833
    hostPort: 8333
  - guestPort: 31606
    hostPort: 6006
